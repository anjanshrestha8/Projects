1.	N
	NE
	NEP
	NEPA
	NEPAL

#include<stdio.h>
#include<conio.h>
int main()
{
	char a[6]={"NEPAL"};
	int i=0,j=0;
	for(i=0;i<5;i++)
	{
		for(j=0;j<=i;j++)
		{
			printf("%c",a[j]);
		}
		printf("\n");
	}
	return 0;
}
2. 5 4 3 2 1
   5 4 3 2
   5 4 3
   5 4
   5

#include<stdio.h>
#include<conio.h>
int main()
{
	int i=0,j=0;
	for(i=1;i<=5;i++)
	{
		for(j=5;j>=i;j--)
		{
			printf("%d",j);
		}
		printf("\n");
	}
	return 0;
}
//3     *
     * *  *
    * * * * *
   * * * * * * *  
  * * * * * * * * *
#include<stdio.h>
#include<conio.h>
int main()
{
	int i=0,j=0,k=0;
	for(i=1;i<=5;i++)
	{
		for(k=i;k<=5;k++)
		{
			printf(" ");
		}
		for(j=1;j<=(2*i)-1;j++)
		{
			printf("*");
		}
		printf("\n");
	}
	return 0;
	
}
4     .      *   *    *    *   *   *    *    *   *
               *    *    *   *   *    *    * 
                     *    *   *   *    *     
                           *   *   *  
                                *
#include<stdio.h>
#include<conio.h>
int main()
{
	int i=0,j=0,k=0;
	for(i=5;i>=1;i--)
	{
		for(k=i;k<=5;k++)
		{
			printf(" ");
		}
		for(j=1;j<=(2*i)-1;j++)
		{
			printf("*");
		}
		printf("\n");
	}
	return 0;
}
5 .     $   *   $   *
        *   $   *   $
        $   *   $   *

#include<stdio.h>
#include<conio.h>
int main()
{
	int i=0,j=0;
	for(i=1;i<=4;i++)
	{ 
		for(j=1;j<=4;j++)
		{
			if(i%2==0&&j%2==0||i%2==1&&j%2==1)
			`{
				printf("$");
			}
			else
			{
				printf("*");
			}
		}
		printf("\n");
	}
	return 0;
}
1//.	Write a program with structure "Students" to contain name, faculty, email, and total marks obtained.
 //Develop a program to read data for 5 students and display the overall detail of students rank wise with respect to total marks.
#include<stdio.h>
#include<conio.h>
#include<string.h>
struct students
{
	char name[25];
	char faculty[25];
	int marks;
	char email[30];
}s[5];
int main()
{
	struct students temp;
	int i=0,j=0;
	for(i=0;i<5;i++)
	{
		printf("\n enter the name");
		gets(s[i].name);
		fflush(stdin);
		printf("\n enter faculty");
		gets(s[i].faculty);
		fflush(stdin);
		printf("\n enter marks");
		scanf("%d",&s[i].marks);
		fflush(stdin);
		printf("\n enter email");
		gets(s[i].email);
		fflush(stdin);
	}	
	for(i=0;i<5;i++)
	{
		for(j=i+1;j<5;j++)
		{
			if(s[i].marks<s[j].marks)
			{
				temp=s[i];
				s[i]=s[j];
				s[j]=temp;
			}
		}
	}
	printf("\n the rank wise student details are:");
	for(i=0;i<5;i++)
	{
		printf("\n name=%s",s[i].name);
		fflush(stdin);
		printf("\n faculty=%s",s[i].faculty);
		fflush(stdin);
		printf("\n marks=%d",s[i].marks);
		fflush(stdin);
		printf("\n email=%d",s[i].email);
		fflush(stdin);
	}
	return 0;
}
2.//	Writ a program, using structure to input records of 5 students. Members include name, roll number, and marks 
//obtained in math, C programming and English. Display the records of students who have passed in C programming.
#include<stdio.h>
#include<conio.h>
struct stud
{
	char name[25];
	int roll;
	int math;
	int c;
	int eng;
}s[5];
int main()
{
	int i=0;
	for(i=0;i<5;i++)
	{
		printf("\n enter name:");
		gets(s[i].name);
		fflush(stdin);
		printf("\n enter roll number");
		scanf("%d",&s[i].roll);
		fflush(stdin);
		printf("\n enter the marks of math");
		scanf("%d",&s[i].math);
		fflush(stdin);
		printf("\n enter the marks of c programming");
		scanf("%d",&s[i].c);
		fflush(stdin);
		printf("\n enter the marks of english");
		scanf("%d",&s[i].eng);
		fflush(stdin);
	}
	printf("\n the records of the students who have passed c programming are:");
	for(i=0;i<5;i++)
	{
		if(s[i].c>=40&&s[i].c<=100)
		{
			printf("\n name=%s",s[i].name);
			fflush(stdin);
			printf("\n roll number=%d",s[i].roll);
			fflush(stdin);
			printf("\n marks of math=%d",s[i].math);
			fflush(stdin);
			printf("\n marks of c=%d",s[i].c);
			fflush(stdin);
			printf("\n marks of english=%d",s[i].eng);
			fflush(stdin);
		}
	}
	return 0;
}
3.//	Define a structure data type called time-struct containing three members hour, minute and second.
 //Develop a program that would assign values to the individual members and display the time in the form 16:40:51.
#include<stdio.h>
#include<conio.h>
struct time_struct{
int hour,minute,second;
}time;
int main()
{
int i;
printf("\nEnter the time in hour, minute and second format");
scanf("%d%d%d",&time.hour,&time.minute,&time.second);
if(time.minute>60 || time.second>60)
printf("\nPlease enter valid time format");
else
{
printf("\nEntered Time is :");
if(time.hour<=9 && time.minute<=9 && time.second<=9)
printf("\n0%d:0%d:0%d",time.hour,time.minute,time.second);
else if(time.hour<=9 && time.minute>9 && time.second>9)
printf("\n0%d:%d:%d",time.hour,time.minute,time.second);
else if(time.hour>9 && time.minute<=9 && time.second>9)
printf("\n%d:0%d:%d",time.hour,time.minute,time.second);
else if(time.hour>9 && time.minute>9 && time.second<=9)
printf("\n%d:%d:0%d",time.hour,time.minute,time.second);
else if(time.hour<=9 && time.minute<=9 && time.second>9)
printf("\n0%d:0%d:%d",time.hour,time.minute,time.second);
else if(time.hour<=9 && time.minute>9 && time.second<=9)
printf("\n0%d:%d:0%d",time.hour,time.minute,time.second);
else if(time.hour>9 && time.minute<=9 && time.second<=9)
printf("\n%d:0%d:0%d",time.hour,time.minute,time.second);
else
printf("\n%d:%d:%d",time.hour,time.minute,time.second);
}
return 0;
}
4.//	Write a program to input 5 employee records (Emp_id, Emp_name and Emp_Salary).
// Display 3 employee information who gets the highest salary.
#include<stdio.h>
#include<conio.h>
struct emp{
	int emp_id;
	char emp_name[20];
	int emp_salary;
}s[5];
int main()
{
	
	struct emp temp;
	int i=0,j=0;
	for(i=0;i<5;i++)
	{
		printf("Enter id");
		scanf("%d",&s[i].emp_id);
		fflush(stdin);
		printf("Enter name");
		gets(s[i].emp_name);
		fflush(stdin);
		printf("Enter salary");
		scanf("%d",&s[i].emp_salary);
		fflush(stdin);
	}
	for(i=0;i<5;i++)
	{
		for(j=i+1;j<5;j++)
		{
			if(s[i].emp_salary<s[j].emp_salary);
			{
				temp=s[i];
				s[i]=s[j];
				s[j]=temp;
			}
		}
	}
	printf("The 3 employee who get the highest salary are:");
	for(i=0;i<3;i++)
	{
		printf("Id:%d\n",s[i].emp_id);
		printf("Name:%s\n",s[i].emp_name);
		printf("Salary:%d\n",s[i].emp_salary);
	}
	return 0;
}
5.//	W Write a program to input 5 employee records (Emp_id, Emp_name and Emp_Salary).
// Display employee information whose name starts with 'D'.
#include<stdio.h>
#include<conio.h>
#include<string.h>
struct emp{
	int emp_id;
	char emp_name[25];
	int emp_salary;
}s[5];
int main()
{
	int i=0;
	char name[25];
	for(i=0;i<5;i++)
	{
		printf("\n Enter employee id:");
		scanf("%d",&s[i].emp_id);
		fflush(stdin);
		printf("\n Enter employee name:");
		gets(s[i].emp_name);
		fflush(stdin);
		printf("\n Enter salary:");
		scanf("%d",&s[i].emp_salary);
		fflush(stdin);
	}
	printf("\n the details of the employee whose name starts with d are:");
	for(i=0;i<5;i++)
	{
		strcpy(name,s[i].emp_name);
		if(name[0]=='D' || name[0]=='d')
		{
			printf("\n Employee Id= %d",s[i].emp_id);
			fflush(stdin);
			printf("\n Employee Name= %s",s[i].emp_name);
			fflush(stdin);
			printf("\n Employee Salary= %d",s[i].emp_salary);
			fflush(stdin);
		}
	}
	return 0;
}
//1.	Write a program to print ASCII values of each and every character of the string given by the user.//
#include<stdio.h>
#include<conio.h>
#include<string.h>
int main()
{
	int i=0;
	char a[100];
	printf("Enter a string: ");
	scanf("%s",&a);
	printf("The ascii value of every character of the string is:\n");
	for(i=0;a[i]!='\0';i++)
	{
		printf("%d\n",a[i]);
	 } 
	return 0;
}
2.	Write a program to reverse a string without using string handling function.
#include<stdio.h>
#include<conio.h>
int main()
{
	char x[20],y[20];
	int i=0,j=0,count=0;
	printf("\n enter a string to be reversed");
	gets(x);
	while(x[count]!=0)
	{
		count++;
		j=count-1;
	}
	for(i=0;i<count;i++)
	{
		y[i]=x[j];
		j--;
	}
	y[i]='\0';
	printf("\n the reversed string is");
	puts(y);
	return 0;
}
3.	Write a program to compare whether two strings are identical or not without using string handling function.
#include<stdio.h>
#include<conio.h>
int main()
{
	char x[20],y[20];
	int i=0,c=0;
	printf("\n enter the first string:");
	gets(x);
	printf("\n enter the second string:");
	gets(y);
	for(i=0;((x[i]!='\0') || (y[i]!='\0'));i++) 
	{
		if(x[i]!=y[i])
		{
			c++;
			break;
		}
	}
	if(c==0)
	{
		printf("\n they are identical");
	}
	else
	{
		printf("\n they are not identical");
	}
	return 0;
}

4.	Write a program to count no of spaces, vowels in a sentence input by the user.#include<stdio.h>
#include<conio.h>
int main()
{
	char a[100];
	int i=0,vowel=0,space=0;
	printf("Enter the string: ");
	gets(a);
	for(i=0;a[i]!='\0';i++)
	{
		if(a[i]=='a' || a[i]=='e' || a[i]=='i' || a[i]=='o' || a[i]=='u' || a[i]=='A' || a[i]=='E' || a[i]=='I' || a[i]=='O' || a[i]=='U')
		{
			vowel++;
		}
		else if(a[i]==' ')
		{
			space++;
		}
	}
	printf("The no of vowel is %d\n",vowel);
	printf("The no of spaces is %d",space);
	return 0;
}
5.	Write a program to convert a lower case string to upper case string without using string handling function.
#include<stdio.h>
#include<conio.h>
int main()
{
	char a[20];
	int i=0;
	printf("\n enter your string in lowercase:");
	gets(a);
	while(a[i]!='\0')
	{
		if(a[i]>='a'&&a[i]<='z')
		a[i]=a[i]-32;
		i++;
	}
	printf("\n the uppercase string is:");
	puts(a);
	getch();
}6.	Write a program to combine two different words into one without using 
string handling function (e.g.: word 1: kist, word 2: college, Result: kist college)
#include<stdio.h>
#include<conio.h>
int main()
{
	char str1[50],str2[50];
	int i=0,j=0;
	printf("\n enter the first string:");
	gets(str1);
	printf("\n enter the second string");
	gets(str2);
	while(str1[i]!='\0')
	{
		i++;
	}
	str1[i]=' ';
	i++;
	while(str2[j]!='\0')
	{
		str1[i]=str2[j];
		j++;
		i++;
	}
	str1[i]='\0';
	printf("\n the concatenated string is");
	puts(str1);
	getch();
}
1.	Write a program to take 10 numbers from user and only display numbers which are prime.
#include<stdio.h>
#include<conio.h>
int main()
{
	int a[10],i=0,j=0,count=0;
	printf("\n enter the numbers");
	for(i=0;i<10;i++)
	
	{
		scanf("%d",&a[i]);
	}
	printf("\n the list  of prime numbers are:");
	for(i=0;i<10;i++)
	{
		count=0;
		for(j=0;j<=i;j++)
		{
			if(a[i]%a[j]==0)
			{
				count++;
			}
			
		}
		if(count==2)
		{
			printf("\n%4d is prime number",a[i]);
		}
	}
	return 0;
}

3.	Write a program to take 10 numbers from user and count how many even and odd numbers are present
#include<stdio.h>
#include<conio.h>
int main()
{
	int num=0,i=0,even=0,odd=0;
	
	printf("\n enter the numbers");
	for(i=0;i<10;i++)
	{
		scanf("%d",&num);
	}
	for(i=0;i<10;i++)
	{
		if(i%2==0)
		{
			even++;
		}
		else
		{
			odd++;
			
		}
	}
	printf("\n the count of even number is%d",even);
	printf("\n the count of odd number is%d",odd);
	getch();
}
4.	Write a program to take 3x3 matrix input from user and calculate sum of diagonal elements.
#include<stdio.h>
#include<conio.h>
int main()
{
	int a[3][3],dsum=0,i=0,j=0;
	printf("\n Enter elements of matrix:");
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			scanf("%d",&a[i][j]);
		}
	}
	
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			if(i==j)
			{
				dsum=dsum+a[i][j];
			}
		}
	}
	printf("\n Sum of diagonal of matrix is: %d",dsum);
	return 0;
}
5.	Write a program to take 3x3 matrix input from user and calculate sum of four corners element.
#include<stdio.h>
#include<conio.h>
int main()
{
	int a[3][3],sum=0,i=0,j=0;
	printf("Enter the elements of matrix:\n");
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			scanf("%d",&a[i][j]);
		}
	}
	sum=a[0][0]+a[0][2]+a[2][0]+a[2][2];
	printf("Sum of corner of matrix is: %d",sum);
	return 0;
}
6.	Write a program to take two 3X3 matrix, add them and display transpose of final result.
#include<stdio.h>
#include<conio.h>
int main()
{
	int a[3][3],b[3][3],sum[3][3],trans[3][3],i=0,j=0;
	printf("\n Enter the elements of a matrix:");
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
		  scanf("%d",&a[i][j]);
	    }
	}
	printf("\n Enter the elements of b matrix:");
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
		  scanf("%d",&b[i][j]);
	    }
	}
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			sum[i][j]=a[i][j]+b[i][j];
		}
	}
	printf("\n The sum of matrix is:");
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			printf("%d ",sum[i][j]);
		}
		printf("\n");
	}
	// Transposing matrix
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			trans[i][j]=sum[j][i];
		}
	}
	printf("\n Transpose of matrix is:");
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			printf("%d ",trans[i][j]);
		}
		printf("\n");
	}
	return 0;
}
7.	Write a program to take 10 numbers from user and
 display the numbers in ascending order, counting total number of digits which are odd.
#include<stdio.h>
#include<conio.h>
int main()
{
	int a[10],i=0,j,temp,odd;
	printf("\n Enter 10 numbers:");
	for(i=0;i<10;i++)
	{
		scanf("%d",&a[i]);
	}
	for(i=0;i<10;i++)
	{
		for(j=i+1;j<10;j++)
		{
			if(a[i]>a[j])
			{
			 temp=a[i];
			 a[i]=a[j];
			 a[j]=temp;
		    }
		}
	}
	printf("\n Numbers in ascending order are:");
	for(i=0;i<10;i++)
	{
		printf("%d\n",a[i]);
	}
	for(i=0;i<10;i++)
	{
		if(a[i]%2!=0)
		{
			odd++;
		}
	}
	printf("\n The total number of odd number is: %d",odd);
	return 0;
}
1.	Write a program to find sum of Natural Numbers Using Recursion
#include<stdio.h>
#include<conio.h>
int addNumbers(int n);
int main() 
{
    int num;
    printf("Enter a positive integer: ");
    scanf("%d", &num);
    printf("Sum = %d", addNumbers(num));
 getch();
}

int addNumbers(int n) {
    if (n != 0)
        return n + addNumbers(n - 1);
    else
        return n;
}
2.	Write a program to generate Fibonacci Series using recursion.
#include<stdio.h>
#include<conio.h> 
int Fibonacci(int);
int main()
{
   int n,i,c=0; 
   printf("input number: ");
   scanf("%d",&n);
   printf("Fibonacci series\n");
   for (i=1;i<=n;i++)
   {
    	printf("%d\t",Fibonacci(c));
    	c++; 
   }
   getch();
}
 
int Fibonacci(int n)
{
   if (n==0)
	{
      return 0;
	}
   else if (n==1)
    {
	  return 1;
	}
	
   else
	{
      return ( Fibonacci(n-1) + Fibonacci(n-2) );
	}
}
3.	Write a program to find the power of a given number using recursion
#include<stdio.h>
#include<conio.h>
int power(int ,int );
int main()
{
int result,a,b;
printf("enter the power and number");
scanf("%d%d",&a,&b);
result=power(a,b);
printf("the result is %d",result);
getch();
}
int power(int x,int y)
{
int result1=1,i;
for(i=1;i<=x;i++)

result1=result1*y;

return result1;
}
4.	Write a program to find factorial of a given number using recursion.
#include<stdio.h>
#include<conio.h>
int fact(int);
int main()
{
	int result=0;
	int num;
	printf("\n enter the number you want to know the factorial");
	scanf("%d",&num);
	result=fact(num);
	printf("\n result=%d",result);
	getch();
}
int fact(int x)
{
	if(x!=0)
	{
		return(x*fact(x-1));
	}
	else
	{
		return 1;
	}
}
1.	Write a program using DMA to take 10 numbers from user and only display numbers which aren't prime.
#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
int main()
{
	int *p,a[10],count=0;
	int i,j;
	p=a;
	p=(int*)malloc(10*sizeof(int));
	printf("Enter 10 numbers");
	for(i=0;i<10;i++)
	{
		scanf("%d",(p+i));
	}
	printf("The non prime numbers are:\n");
	for(i=0;i<10;i++)
	{
	    for(j=1;j<=10;j++)
		{
			if(*(p+i)%j==0)
			{
				count++;
			}
     	}
		 if(count>2)
		 {
		 	printf("%d\n",*(p+i));
		 }
		 count=0;	
	}
	return 0;
}
2.	Write a program using DMA to take 10 numbers from user and arrange them in reverse order.
#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
int main()
{
	int a[10],b[10],*p,*q,i=0;
	p=a;
	q=b;
	p=(int*)malloc(10*sizeof(int));
	q=(int*)malloc(10*sizeof(int));
	printf("Enter 10 numbers");
	for(i=0;i<10;i++)
	{
		scanf("%d",(p+i));
	}
	for(i=0;i<10;i++)
	{
		*(q+i)=*(p+10-i-1);
	}
	printf("The array in reverse order are:");
	for(i=0;i<10;i++)
	{
		printf("%d\n",*(q+i));
	}
	return 0;
}
3.	Write a program using DMA to take 10 numbers from user 
and find sum of all 10 digits, and check whether sum is palindrome or not.
#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
int main()
{
	int a[10],*p,i=0,sum=0;
	int r,sum1,temp;
	p=a;
	p=(int*)malloc(10*sizeof(int));
	printf("Enter 10 numbers");
	for(i=0;0i<10;i++)
	{
		scanf("%d\n",(p+i));
	}
	for(i=0;i<10;i++)
	{
		sum=sum+ *(p+i);
	}
	printf("The total sum is %d\n",sum);
	temp=sum;
	while(sum>0)
	{
		r=sum%10;
		sum1=sum1*10+r;
		sum=sum/10;
	}
	if(sum1==temp)
	{
		printf("%d is palindome\n",temp);
	}
	else
	{
		printf("%d is not palindrome\n",temp);
	}
	return 0;
}
4.	Write a program using DMA to take 10 numbers from user and find sum of all 10 digits, and check whether sum is Armstrong or not.
#include<stdio.h>
#include<conio.h>
#include<stdlib.h>
#include<math.h>
int main()
{
	int *p,a[10],sum,r,count=0;
	int i=0,sum1=0,temp1=0,temp=0;
	p=a;
	p=(int*)malloc(10*sizeof(int));
	printf("Enter 10 numbers\n");
	for(i=0;i<10;i++)
    {
    	scanf("%d",&a[i]);
	}
	for(i=0;i<10;i++)
	{
		sum+=a[i];
	}
	printf("The total sum of 10 no is : %d\n",sum);
	temp=sum;
	temp1=sum;
	while(temp>0)
	{
		r=temp%10;
		count=count+1;
		temp=temp/10;
	}
	while(sum>0)
	{
		r=sum%10;
		sum1=sum1+pow(r,count);
		sum=sum/10;
	}
	if(sum1==temp1)
	{
		printf("It is armstrong\n");
	}
	else{
		printf("It is not armstrong\n");
	}
	return 0;
}
1.	Write a program to add all the even numbers in an array and display result using pointers only.
#include<stdio.h>
#include<conio.h>
int main()
{
	int *p,a[10],i,even=0;
	p=a;
	printf("Enter 10 numbers:\n");
	for(i=0;i<10;i++)
	{
		scanf("%d",(p+i));
	}
	for(i=0;i<10;i++)
	{
		if(*(p+i)%2==0)
		{
			even=even+*(p+i);
		}
	}
	printf("The sum of even number is %d",even);
	return 0;
}
2.	Write a program to find highest value amongst 10 numbers given by user using pointers.
#include<stdio.h>
#include<conio.h>
int main()
{
	int *p,a[10],i,j,temp;
	p=a;
	printf("Enter 10 numbers");
	for(i=0;i<10;i++)
	{
		scanf("%d",(p+i));
	}
	for(i=0;i<10;i++)
	{
		for(j=i+1;j<10;j++)
		{
			if(*(p+i)>*(p+j))
			{
				temp=*(p+i);
				*(p+i)=*(p+j);
				*(p+j)=temp;
			}
		}
	}
	printf("%d is the highest number",*(p+9));
	return 0;
}
3.	Write a program to enter 10 numbers and calculate even and odd numbers count using pointers only.
#include<stdio.h>
#include<conio.h>
int main()
{
	int *p,a[10],i,odd=0,even=0;
	p=a;
	printf("Enter 10 numbers");
	for(i=0;i<10;i++)
	{
		scanf("%d",(p+i));
	}
	for(i=0;i<10;i++)
	{
		if(*(p+i)%2==0)
	    {
	    	even++;
		}
		else
		{
			odd++;
		}
	}
	printf("The number of odd number is %d\n",odd);
	printf("The number of even number is %d\n",even);
	return 0;
}
4.	Write a program to add two arrays and count number of odd numbers in the final result using pointers only
#include<stdio.h>
#include<conio.h>
int main()
{
	int *p,c=0,*q,*r,2sum[100],n,a[100],b[100],odd,i;
	p=a;
	q=b;
	r=sum;
	printf("input size of array: ");
	scanf("%d",&n);
	printf("Enter 10 numbers");
	printf("array values of a: \n");
	for(i=0;i<n;i++)
	{
		scanf("%d",(p+i));
	}
	printf("array values:\n");
	for(i=0;i<n;i++)
	{
		scanf("%d",(q+i));
	}	
	printf("array sum:\n ");
	for(i=0;i<n;i++)
	{
		*(r+i)=*(p+i) + *(q+i);
		printf("%d\n",*(r+i));
	}
	for(i=0;i<n;i++)
    {
    	if(*(r+i)%2!=0)
    	{
    		c++;
		}
	} 
	printf("\n%d is the total of odd number",c);
	return 0;
}
1.	Write a program using function to check whether number is prime or not. 
#include<stdio.h>
#include<conio.h>
int prime(int);
int main()
{
	int num;
	int result=0;
	printf("\n enter the number");
	scanf("%d",&num);
	result=prime(num);
	if(result==1)
	{
		printf("\n the given number is prime number");
	}
	else
	{
		printf("\n the given number is not prime number");
	}
	getch();
}
int prime(int x)
{
	int y,z=0;
	for(y=1;y<=x;y++)
	{
		if(x%y==0)
		{
			z=z+1;
		}
	}
	if(z==2)
	{
		return 1;
	}
	else
	{
		return 0;
	}
} 
3.	Write a program using function to check whether number is Armstrong or not by passing pointers. (with value, with return)
#include<stdio.h>
#include<conio.h>
#include<math.h>
int armstrong(int *);
int main()
{
	int *p,a,num;
	p=&a;
	printf("Enter a number to check armstrong or not:");
	scanf("%d",p);
	num=armstrong(p);
	if(*p==num)
	{
	  printf("It is armstrong");
    }
	else
	{
		printf("It is not armstrong");
	}
	return 0;
}
int armstrong(int *x)
{
	int temp,sum=0,temp1,r,count=0;
	temp=*x;
	temp1=*x;
	while(temp>0)
	{
		count=count+1;
		temp=temp/10;
	}
	while(*x>0)
	{
		r=*x%10;
		sum=sum+pow(r,count);
		*x=*x/10;
	}
	*x=temp1;
	return sum;
}
4.	Write a program to check whether number is Armstrong or not using function. (with value, with return).
#include<stdio.h>
#include<conio.h>
#include<math.h>
int armstrong(int);
int main()
{
	int num,a,b;
	int result=0;
	printf("\n enter a number");
	scanf("%d",&num);
	a=num;
	b=num;
	result=armstrong(num);
	if(result==1)
	{
		printf("\n the given number is armstrong");
	}
	else
	{
		printf("\n the given number is not armstrong");
	}
	getch();
}
int armstrong(int x)
{
	int sum=0,temp=0,temp1=0,count=0,rem=0;
	while(temp>0)
	{
		rem=temp%10;
		count=count+1;
		temp=temp/10;
	}
	while(x>0)
	{
		rem=x%10;
		sum=sum+pow(rem,count);
		x=x/10;
	}
	if(sum==temp1)
	{
		return 1;
	}
	else
	{
		return 0;
	}
}